require "minitest/autorun"
require "fileutils"

require "hoe"
Hoe.plugin :bundler

class TestHoeBundler < Minitest::Test
  def teardown
    system "git checkout -f test/fixture_project/Gemfile"
  end

  def test_output
    gemfile = nil
    Dir.chdir(File.join(File.dirname(__FILE__), "fixture_project")) do
      FileUtils.rm_f "Gemfile"
      begin
        system "rake bundler:gemfile"
        gemfile = File.read "Gemfile"
      end
    end

    assert_match %r{^# -\*- ruby -\*-$}, gemfile
    assert_match %r{^# DO NOT EDIT THIS FILE. Instead, edit Rakefile, and run `rake bundler:gemfile`.}, gemfile
    assert_match %r{^source "https://rubygems.org/"$}, gemfile
    assert_match %r{^gem "xxx", ">=0"$}, gemfile
    assert_match %r{^gem "yyy", ">=0"$}, gemfile
    assert_match %r{^gem "zzz", "<1.5.0"$}, gemfile
    assert_match %r{^gem "aaa", ">=0", :group => \[:development, :test\]$}, gemfile
    assert_match %r{^gem "bbb", ">=2.2.0", :group => \[:development, :test\]$}, gemfile
    assert_match %r{^gem "ccc", ">=0", :group => \[:development, :test\]$}, gemfile
    assert_match %r{^gem "hoe", .* :group => \[:development, :test\]$}, gemfile
    assert_match %r{^# vim: syntax=ruby$}, gemfile
  end

  def test_handles_duplicate_dependencies_like_gemspec
    Dir.chdir(File.join(File.dirname(__FILE__), "fixture_project")) do
      hoe = Hoe.spec "foo" do
        developer("MCA","mca@example.com")
        license "fixture license"
        extra_deps << ["yyy", ">=0"]
        extra_deps << ["yyy", ">=1"]
        extra_dev_deps << ["bbb", ">= 1"]
        extra_dev_deps << ["bbb", ">= 0"]
      end

      lines = hoe.hoe_bundler_contents.split("\n")
      assert_equal 1, lines.grep(/yyy/).length
      assert_match(/>=0/, lines.grep(/yyy/).first)
      assert_equal 1, lines.grep(/bbb/).length
      assert_match(/>=1/, lines.grep(/bbb/).first)
    end
  end

  def test_handles_alternative_declaration
    Dir.chdir(File.join(File.dirname(__FILE__), "fixture_project")) do
      hoe = Hoe.spec "foo" do
        developer "MCA", "mca@example.com"
        license "fixture license"
        dependency "foo", [">= 0.8", "< 12.0"]
        dependency "bar", [">= 1.8", "< 3.0"], :dev
      end

      lines = hoe.hoe_bundler_contents.split("\n")
      assert_equal %Q{gem "foo", ">=0.8", "<12.0"}, lines.grep(/foo/).first
      assert_equal %Q{gem "bar", ">=1.8", "<3.0", :group => [:development, :test]}, lines.grep(/bar/).first
    end
  end

  def test_source_symbol_option
    gemfile = nil
    Dir.chdir(File.join(File.dirname(__FILE__), "fixture_project")) do
      FileUtils.rm_f "Gemfile"
      begin
        system "rake bundler:gemfile[gemcutter]"
        gemfile = File.read "Gemfile"
      end
    end
    assert_match %r{^source \:gemcutter$}, gemfile
  end

  def test_source_http_option
    gemfile = nil
    Dir.chdir(File.join(File.dirname(__FILE__), "fixture_project")) do
      FileUtils.rm_f "Gemfile"
      begin
        system "rake bundler:gemfile[http://gems.github.com]"
        gemfile = File.read "Gemfile"
      end
    end
    assert_match %r{^source "http:\/\/gems\.github\.com"$}, gemfile
  end

  def test_source_https_option
    gemfile = nil
    Dir.chdir(File.join(File.dirname(__FILE__), "fixture_project")) do
      FileUtils.rm_f "Gemfile"
      begin
        system "rake bundler:gemfile[https://gems.github.com]"
        gemfile = File.read "Gemfile"
      end
    end
    assert_match %r{^source "https:\/\/gems\.github\.com"$}, gemfile
  end

  def test_gemspec_option
    gemfile = nil
    Dir.chdir(File.join(File.dirname(__FILE__), "fixture_project")) do
      FileUtils.rm_f "Gemfile"
      begin
        system "rake bundler:gemfile[rubygems,true]"
        gemfile = File.read "Gemfile"
      end
    end
    assert_match %r{^# -\*- ruby -\*-$}, gemfile
    assert_match %r{^# DO NOT EDIT THIS FILE. Instead, edit Rakefile, and run `rake bundler:gemfile`.}, gemfile
    assert_match %r{^source \:rubygems$}, gemfile
    assert_match %r{^gemspec$}, gemfile
    assert_match %r{^# vim: syntax=ruby$}, gemfile

    lines = gemfile.split("\n")
    # normal gem declarations should not be there if gemspec is used
    assert_equal 0, lines.grep(/gem \"/).length
  end

  def test_just_gemspec_option
    gemfile = nil
    Dir.chdir(File.join(File.dirname(__FILE__), "fixture_project")) do
      FileUtils.rm_f "Gemfile"
      begin
        system "rake bundler:gemfile[,true]"
        gemfile = File.read "Gemfile"
      end
    end
    assert_match %r{^# -\*- ruby -\*-$}, gemfile
    assert_match %r{^# DO NOT EDIT THIS FILE. Instead, edit Rakefile, and run `rake bundler:gemfile`.}, gemfile
    assert_match %r{^source "https:\/\/rubygems.org\/"$}, gemfile
    assert_match %r{^gemspec$}, gemfile
    assert_match %r{^# vim: syntax=ruby$}, gemfile

    lines = gemfile.split("\n")
    # normal gem declarations should not be there if gemspec is used
    assert_equal 0, lines.grep(/gem \"/).length
  end

  def test_source_http_and_gemspec_option
    gemfile = nil
    Dir.chdir(File.join(File.dirname(__FILE__), "fixture_project")) do
      FileUtils.rm_f "Gemfile"
      begin
        system "rake bundler:gemfile[http://gems.github.com,true]"
        gemfile = File.read "Gemfile"
      end
    end
    assert_match %r{^source "http:\/\/gems\.github\.com"$}, gemfile
    assert_match %r{^gemspec$}, gemfile
  end
end
